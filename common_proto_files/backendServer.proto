syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.backendserver";
option java_outer_classname = "BackEndServerProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Server {

  rpc sendMessage (sendingMessage) returns (messageResponse) {}
  rpc getAllChatMessages (chatMessageRequest) returns (stream messageResponse) {}
  rpc getChatMessagesSincePosition (chatMessageFromPosition) returns (stream messageResponse) {}
  rpc createChat (CreateChatRequest) returns (CreateChatReply) {}
  rpc getLastNMessagesFromChat (NMessagesFromChat) returns (stream messageResponse) {}
  rpc getChatMessagesSincePositionMobileData (chatMessageFromPosition) returns (stream messageResponse) {}
  rpc getMessagesBetweenPositionsMobileData (messagesBetweenPosition) returns (stream messageResponse) {}
}

message messagesBetweenPosition {
  string chatroom = 1;
  int32 positionOfLastMessage = 2;
  int32 numberOfMessages = 3;
}

message chatMessageFromPosition {
	string chatroom = 1;
	int32 positionOfLastMessage = 2;
}

message chatMessageRequest {
	string chatroom = 1;
}

message sendingMessage {
  string username = 1;
  string timestamp = 2;
  string chatroom = 3;
  string data = 4;
  int32 type = 5;
}

message messageResponse {
  string username = 1;
  string timestamp = 2;
  string chatroom = 3;
  string data = 4;
  int32 type = 5;
  int32 position = 6;
}

message CreateChatRequest {
  string user = 1;
  string chatroom_name = 2;
}

message CreateChatReply {
  string ack = 1;
}

message NMessagesFromChat {
  string chatroom = 1;
  int32 numberOfMessages = 2;
}